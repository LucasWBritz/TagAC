version: '3.4'

services:
    
  ### Logs using Kibana and ElasticSearch
  es01:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    restart: always
    ports: 
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - node.name=es01
      - cluster.name=es-tagac-cluster
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - tagacnetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana
    ports:
      - 5601:5601
    restart: always
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - tagacnetwork

  tagac.database:
    container_name: TagAC.SQLDatabase
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
       SA_PASSWORD: "123@qwe@123"
       ACCEPT_EULA: "Y"
    volumes: 
      - sqldatafiles:/var/opt/sqlserver
      - sqldata:/var/opt/mssql
    networks:
      - tagacnetwork
    restart: always

  rediscache:
    container_name: TagAC.APis.AccessControl.Redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
     - tagacnetwork

  apis.ac:
    container_name: TagAC.APis.AccessControl
    image: ${DOCKER_REGISTRY-}tagacapisaccesscontrol
    build:
      context: .
      dockerfile: src/TagAC.Apis.AccessControl/Dockerfile
    ports:
      - "5001:80"
      - "5002:443"
    networks:
      - tagacnetwork
    depends_on:
      - rediscache
    environment:
      - "CacheSettings__ConnectionString=rediscache:6379"   
      - "ElasticConfiguration__Uri=http://es01:9200"

  apis.identity:
    container_name: TagAC.APis.Identity
    image: ${DOCKER_REGISTRY-}tagacapisidentity
    build:
      context: .
      dockerfile: src/TagAC.Apis.Identity/Dockerfile
    ports:
      - "5003:80"
      - "5004:443"
    networks:
      - tagacnetwork
    depends_on:
      - tagac.database
    environment:
      - "ConnectionStrings__DefaultConnection=Server=tagac.database;Database=TagACAuth;User Id=sa;Password=123@qwe@123;MultipleActiveResultSets=true"       
      - "ElasticConfiguration__Uri=http://es01:9200"

  apis.management:
    container_name: TagAC.APis.Management
    image: ${DOCKER_REGISTRY-}tagacapismanagement
    build:
      context: .
      dockerfile: src/TagAC.Apis.Management/Dockerfile
    ports:
      - "5005:80"
      - "5006:443"
    networks:
      - tagacnetwork
    depends_on:
      - tagac.database
    environment:
      - "ConnectionStrings__DefaultConnection=Server=tagac.database;Database=TagACManagement;User Id=sa;Password=123@qwe@123;MultipleActiveResultSets=true"       
      - "ElasticConfiguration__Uri=http://es01:9200"

networks:
    tagacnetwork:
        driver: bridge

volumes:
    elasticsearch-data:
    sqldatafiles:
    sqldata:
